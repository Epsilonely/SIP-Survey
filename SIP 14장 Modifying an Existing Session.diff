14. Modifying an Existing Session

> A successful INVITE request (see Section 13) establishes both a dialog between two user agents and a session using the offer-answer model.  Section 12 explains how to modify an existing dialog using a target refresh request (for example, changing the remote target URI of the dialog).  This section describes how to modify the actual session.  This modification can involve changing addresses or ports, adding a media stream, deleting a media stream, and so on.  This is accomplished by sending a new INVITE request within the same dialog that established the session.  An INVITE request sent within an existing dialog is known as a re-INVITE.
INVITE 요청이 설립되면(섹션 13 참조) 두 UA 간의 다이얼로그와 offer-answer 모델을 사용하는 세션이 모두 설정된다.  섹션 12에서는 target refresh 요청을 사용하여 기존 다이얼로그를 수정하는 방법(예: 다이얼로그의 remote target URI 변경)에 대해 설명한다.  이 섹션에서는 실제 세션을 수정하는 방법에 대해 설명한다. 이 수정에는 주소 또는 포트 변경, 미디어 스트림 추가, 미디어 스트림 삭제 등이 포함될 수 있다.  이 작업은 세션을 설정한 동일한 다이얼로그 내에서 새 INVITE 요청을 전송하여 수행한다.  기존 다이얼로그 내에서 전송되는 INVITE 요청을 re-INVITE라고 한다.

> 	Note that a single re-INVITE can modify the dialog and the parameters of the session at the same time.
	한번의 re-INVITE로 다이얼로그와 세션의 매개변수를 동시에 수정할 수 있다는 점에 유의하라.
	
> Either the caller or callee can modify an existing session.
발신자나 수신자 모두 기존 세션을 수정할 수 있다.

> The behavior of a UA on detection of media failure is a matter of local policy.  However, automated generation of re-INVITE or BYE is NOT RECOMMENDED to avoid flooding the network with traffic when there is congestion.  In any case, if these messages are sent automatically, they SHOULD be sent after some randomized interval.
미디어 장애 감지 시 UA의 동작은 로컬 정책의 문제이다.  그러나 네트워크가 혼잡할 때 트래픽이 넘쳐나는 것을 방지하기 위해 re-INVITE 또는 BYE를 자동으로 생성하는 것은 권장되지 않는다. 어떤 경우든 이러한 메시지가 자동으로 전송되는 경우에는 무작위 간격을 두고 전송되어야 한다.

> 	Note that the paragraph above refers to automatically generated BYEs and re-INVITEs.  If the user hangs up upon media failure, the UA would send a BYE request as usual.
	위 단락은 자동으로 생성된 BYE와 re-INVITE를 의미한다. 사용자가 미디어 실패 시 전화를 끊으면 UA는 평소와 같이 BYE 요청을 보낸다.
	
	
14.1 UAC Behavior

> The same offer-answer model that applies to session descriptions in INVITEs (Section 13.2.1) applies to re-INVITEs.  As a result, a UAC that wants to add a media stream, for example, will create a new offer that contains this media stream, and send that in an INVITE request to its peer.  It is important to note that the full description of the session, not just the change, is sent.  This supports stateless session processing in various elements, and supports failover and recovery capabilities.  Of course, a UAC MAY send a re-INVITE with no session description, in which case the first reliable non-failure response to the re-INVITE will contain the offer (in this specification, that is a 2xx response).
INVITE의 session description에 적용되는 동일한 offer-answer 모델(섹션 13.2.1)이 re-INVITE에도 적용된다. 따라서 예를 들어 미디어 스트림을 추가하려는 UAC는 이 미디어 스트림이 포함된 새 offer를 생성하고 이를 INVITE 요청으로 상대방에게 보낸다. 변경 사항뿐만 아니라 session description이 전송된다는 점에 유의해야 한다.  이는 다양한 요소에서 상태 비저장 세션 처리를 지원하며 장애 조치 및 복구 기능을 지원한다.  물론 UAC는 session description이 없는 re-INVITE를 보낼 수 있으며, 이 경우 re-INVITE에 대한 첫 번째 신뢰할 수 있는 비실패 응답에 offer가 포함된다(이 사양에서는 2xx 응답).

> If the session description format has the capability for version numbers, the offerer SHOULD indicate that the version of the session description has changed.
session description 형식에 버전 번호 기능이 있는 경우 제공 업체는 session description이 변경되었음을 표시해야 한다.

> The To, From, Call-ID, CSeq, and Request-URI of a re-INVITE are set following the same rules as for regular requests within an existing dialog, described in Section 12.
re-INVITE의 To, From, Call-ID, CSeq 및 Request-URI는 섹션 12에 설명된 기존 다이얼로그 내의 일반 요청과 동일한 규칙에 따라 설정된다.

> A UAC MAY choose not to add an Alert-Info header field or a body with Content-Disposition "alert" to re-INVITEs because UASs do not typically alert the user upon reception of a re-INVITE.
UAS는 일반적으로 re-INVITE 수신 시 사용자에게 알림을 보내지 않기 때문에 UAC는 re-INVITE에 Alert-Info 헤더 필드 또는 Content-Disposition "alert"가 있는 body 를 추가하지 않을 수도 있다.

> Unlike an INVITE, which can fork, a re-INVITE will never fork, and therefore, only ever generate a single final response.  The reason a re-INVITE will never fork is that the Request-URI identifies the target as the UA instance it established the dialog with, rather than identifying an address-of-record for the user.
fork가 가능한 INVITE와 달리 re-INVITE는 절대 fork되지 않으므로 최종 응답을 단 한 번만 생성한다.  re-INVITE가 fork되지 않는 이유는 Request-URI가 사용자의 address-of-record를 식별하는 것이 아니라 다이얼로그를 설정한 UA 인스턴스로 대상을 식별하기 때문이다.

> Note that a UAC MUST NOT initiate a new INVITE transaction within a dialog while another INVITE transaction is in progress in either direction.
UAC는 다이얼로그 내에서 양방향으로 다른 INVITE 트랜잭션이 진행 중인 동안 새 INVITE 트랜잭션을 시작해서는 안 된다.

>	1. If there is an ongoing INVITE client transaction, the TU MUST wait until the transaction reaches the completed or terminated state before initiating the new INVITE.
	1. 진행 중인 클라이언트 트랜잭션이 있는 경우, TU는 트랜잭션이 completed 또는 terminated 상태에 도달할 때까지 기다렸다가 새 INVITE를 시작해야 한다.
	
>	2. If there is an ongoing INVITE server transaction, the TU MUST wait until the transaction reaches the confirmed or terminated state before initiating the new INVITE.
	2. 진행 중인 INVITE 서버 트랜잭션이 있는 경우, TU는 트랜잭션이 confirmed 또는 terminated 상태에 도달할 때까지 기다렸다가 새 INVITE를 시작해야 한다.
	
> However, a UA MAY initiate a regular transaction while an INVITE transaction is in progress.  A UA MAY also initiate an INVITE transaction while a regular transaction is in progress.
그러나 UA는 INVITE 트랜잭션이 진행 중인 동안 일반 트랜잭션을 시작할 수 있다.  일반 트랜잭션이 진행 중일 때도 UA가 INVITE 트랜잭션을 시작할 수 있다.

> If a UA receives a non-2xx final response to a re-INVITE, the session parameters MUST remain unchanged, as if no re-INVITE had been issued. Note that, as stated in Section 12.2.1.2, if the non-2xx final response is a 481 (Call/Transaction Does Not Exist), or a 408 (Request Timeout), or no response at all is received for the re-INVITE (that is, a timeout is returned by the INVITE client transaction), the UAC will terminate the dialog.
UA가 re-INVITE에 대해 2xx가 아닌 최종 응답을 수신하는 경우, 세션 파라미터는 re-INVITE가 발행되지 않은 것처럼 변경되지 않은 상태로 유지되어야 한다. 섹션 12.2.1.2에 명시된 대로 2xx가 아닌 최종 응답이 481(Call/Transaction Does Not Exist) 또는 408(Request Timeout)이거나 re-INVITE에 대한 응답이 전혀 수신되지 않는 경우(즉, INVITE 클라이언트 트랜잭션에서 timeout가 반환되는 경우) UAC가 다이얼로그를 종료한다는 점에 유의한다.

> If a UAC receives a 491 response to a re-INVITE, it SHOULD start a timer with a value T chosen as follows:
UAC가 re-INVITE에 대한 491 응답을 받으면 다음과 같이 선택한 값 T로 타이머를 시작해야 한다:

>	1. If the UAC is the owner of the Call-ID of the dialog ID (meaning it generated the value), T has a randomly chosen value between 2.1 and 4 seconds in units of 10 ms.
	1. UAC가 다이얼로그 ID의 Call-ID 소유자(값을 생성했음을 의미)인 경우 T는 10ms 단위로 2.1초에서 4초 사이에서 임의로 선택된 값을 갖는다.
	
>	2. If the UAC is not the owner of the Call-ID of the dialog ID, T has a randomly chosen value of between 0 and 2 seconds in units of 10 ms.
	2. UAC가 다이얼로그 ID의 Call-ID 소유자가 아닌 경우 T는 10ms 단위로 0~2초 사이에서 임의로 선택된 값을 갖는다.
	
> When the timer fires, the UAC SHOULD attempt the re-INVITE once more, if it still desires for that session modification to take place.  For example, if the call was already hung up with a BYE, the re-INVITE would not take place.
타이머가 발동한 시점에, UAC는 여전히 해당 세션 수정이 수행되기를 원할 경우 re-INVITE를 한 번 더 시도해야 한다.  예를 들어 콜이 이미 BYE로 끊어진 경우 re-INVITE가 수행되지 않는다.

> The rules for transmitting a re-INVITE and for generating an ACK for a 2xx response to re-INVITE are the same as for the initial INVITE(Section 13.2.1).
re-INVITE를 전송하는 규칙과 re-INVITE에 대한 2xx 응답에 대한 ACK를 생성하는 규칙은 최초 INVITE(섹션 13.2.1)와 동일하다.


14.2 UAS Behavior

> Section 13.3.1 describes the procedure for distinguishing incoming re-INVITEs from incoming initial INVITEs and handling a re-INVITE for an existing dialog.
섹션 13.3.1에는 수신되는 re-INVITE와 수신되는 초기 INVITE를 구분하고 기존 다이얼로그에 대한 re-INVITE를 처리하는 절차에 대해 설명한다.

> A UAS that receives a second INVITE before it sends the final response to a first INVITE with a lower CSeq sequence number on the same dialog MUST return a 500 (Server Internal Error) response to the second INVITE and MUST include a Retry-After header field with a randomly chosen value of between 0 and 10 seconds.
동일한 다이얼로그에서 더 낮은 CSeq 시퀀스 번호를 가진 첫 번째 INVITE에 최종 응답을 보내기 전에 두 번째 INVITE를 수신하는 UAS는 두 번째 INVITE에 500(Server Internal Error) 응답을 반환해야 하며 0~10초 사이에서 임의로 선택된 값으로 Retry-After 헤더 필드를 포함해야 한다.

> A UAS that receives an INVITE on a dialog while an INVITE it had sent on that dialog is in progress MUST return a 491 (Request Pending) response to the received INVITE.
해당 다이얼로그에서 보낸 INVITE가 진행 중일 때 다이얼로그에서 INVITE를 받은 UAS는 수신한 INVITE에 대해 491(Request Pending) 응답을 반환해야 한다.

> If a UA receives a re-INVITE for an existing dialog, it MUST check any version identifiers in the session description or, if there are no version identifiers, the content of the session description to see if it has changed.  If the session description has changed, the UAS MUST adjust the session parameters accordingly, possibly after asking the user for confirmation.
UA가 기존 다이얼로그에 대한 re-INVITE를 수신하면 session description의 버전 식별자를 확인하거나 버전 식별자가 없는 경우 session description의 내용을 확인하여 session description이 변경되었는지 확인해야 한다.  session description이 변경된 경우 UAS는 사용자에게 확인을 요청한 후 세션 매개변수를 적절히 조정해야 한다.

>	Versioning of the session description can be used to accommodate the capabilities of new arrivals to a conference, add or delete media, or change from a unicast to a multicast conference.
	session description의 버전 관리를 사용하여 회의에 새로 도착한 참가자의 기능을 수용하거나, 미디어를 추가 또는 삭제하거나, 유니캐스트에서 멀티캐스트 회의로 변경할 수 있다.
	
> If the new session description is not acceptable, the UAS can reject it by returning a 488 (Not Acceptable Here) response for the re-INVITE.  This response SHOULD include a Warning header field.
새 session description이 허용되지 않는 경우 UAS는 re-INVITE에 대해 488(Not Acceptable Here) 응답을 반환하여 이를 거부할 수 있다.  이 응답에는 Warning 헤더 필드가 포함되어야 한다.

> If a UAS generates a 2xx response and never receives an ACK, it SHOULD generate a BYE to terminate the dialog.
UAS가 2xx 응답을 생성하고 ACK를 받지 못하면 BYE를 생성하여 다이얼로그를 종료해야 한다.

> A UAS MAY choose not to generate 180 (Ringing) responses for a re-INVITE because UACs do not typically render this information to the user.  For the same reason, UASs MAY choose not to use an Alert-Info header field or a body with Content-Disposition "alert" in responses to a re-INVITE.
UAC는 일반적으로 사용자에게 이 정보를 렌더링하지 않기 때문에 UAS는 re-INVITE에 대해 180(Ringing) 응답을 생성하지 않도록 선택할 수 있다.  같은 이유로 UAS는 re-INVITE에 대한 응답에 Alert-Info 헤더 필드 또는 Content-Disposition가 "alert"인 body을 사용하지 않도록 선택할 수 있다.

> A UAS providing an offer in a 2xx (because the INVITE did not contain an offer) SHOULD construct the offer as if the UAS were making a brand new call, subject to the constraints of sending an offer that updates an existing session, as described in [13] in the case of SDP. Specifically, this means that it SHOULD include as many media formats and media types that the UA is willing to support.  The UAS MUST ensure that the session description overlaps with its previous session description in media formats, transports, or other parameters that require support from the peer.  This is to avoid the need for the peer to reject the session description.  If, however, it is unacceptable to the UAC, the UAC SHOULD generate an answer with a valid session description, and then send a BYE to terminate the session.
'2xx'로 offer를 제공하는 UAS는 (INVITE에 offer가 포함되지 않았기 때문에) SDP의 경우 [13]에 설명된 대로 기존 세션을 업데이트하는 offer를 전송해야 하는 제약 조건에 따라 마치 새로운 호출을 하는 것처럼 offer를 구성해야 한다. 구체적으로, 이는 UA가 지원하고자 하는 미디어 형식과 미디어 유형을 최대한 많이 포함해야 함을 의미한다.  UAS는 session description이 미디어 포맷, 전송 또는 피어의 지원이 필요한 기타 매개변수에서 이전 session description과 겹치는지 확인해야 한다.  이는 상대방이 session description을 거부할 필요를 피하기 위한 것이다.  그러나 UAC가 허용할 수 없는 경우 UAC는 유효한 session description이 포함된 응답을 생성한 다음 세션을 종료하기 위해 BYE를 보내야 한다.