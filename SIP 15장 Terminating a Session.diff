15. Terminating a Session

> This section describes the procedures for terminating a session established by SIP.  The state of the session and the state of the dialog are very closely related.  When a session is initiated with an INVITE, each 1xx or 2xx response from a distinct UAS creates a dialog, and if that response completes the offer/answer exchange, it also creates a session.  As a result, each session is "associated" with a single dialog - the one which resulted in its creation.  If an initial INVITE generates a non-2xx final response, that terminates all sessions (if any) and all dialogs (if any) that were created through responses to the request.  By virtue of completing the transaction, a non-2xx final response also prevents further sessions from being created as a result of the INVITE.  The BYE request is used to terminate a specific session or attempted session.  In this case, the specific session is the one with the peer UA on the other side of the dialog.  When a BYE is received on a dialog, any session associated with that dialog SHOULD terminate.  A UA MUST NOT send a BYE outside of a dialog.  The caller's UA MAY send a BYE for either confirmed or early dialogs, and the callee's UA MAY send a BYE on confirmed dialogs, but MUST NOT send a BYE on early dialogs. However, the callee's UA MUST NOT send a BYE on a confirmed dialog until it has received an ACK for its 2xx response or until the server transaction times out.  If no SIP extensions have defined other application layer states associated with the dialog, the BYE also terminates the dialog.
이 섹션에서는 SIP로 설정된 세션을 종료하는 절차에 대해 설명한다.  세션의 상태와 다이얼로그의 상태는 매우 밀접한 관련이 있다.  세션이 INVITE로 시작되면 각기 다른 UAS의 1xx 또는 2xx 응답이 다이얼로그를 생성하고, 해당 응답으로 offer/answer 교환이 완료되면 세션도 생성된다.  결과적으로 각 세션은 생성의 원인이 된 단일 다이얼로그와 "associated"된다.  초기 INVITE가 2xx가 아닌 최종 응답을 생성하면 요청에 대한 응답을 통해 생성된 모든 세션(있는 경우)과 모든 다이얼로그(있는 경우)가 종료된다.  트랜잭션이 완료되면 2xx가 아닌 최종 응답은 INVITE의 결과로 추가 세션이 생성되는 것을 방지한다.  BYE 요청은 특정 세션 또는 시도된 세션을 종료하는 데 사용된다.  이 경우 특정 세션은 다이얼로그의 반대편에 있는 피어 UA가 있는 세션이다.  다이얼로그에서 BYE가 수신되면 해당 다이얼로그와 연결된 모든 세션이 종료되어야 한다.  UA는 다이얼로그 외부로 BYE를 보내서는 안 된다.  발신자의 UA는 confirmed 다이얼로그 또는 early 다이얼로그에 대해 BYE를 보낼 수 있으며, 수신자의 UA는 confirmed 다이얼로그에 대해 BYE를 보낼 수 있지만 early 다이얼로그에는 BYE를 보내서는 안 된다. 그러나 수신자의 UA는 2xx 응답에 대한 ACK를 수신하거나 서버 트랜잭션이 시간 초과될 때까지 confirmed 다이얼로그에서 BYE를 보내서는 안 된다.  다이얼로그와 관련된 다른 애플리케이션 계층 상태를 정의한 SIP 확장이 없는 경우 BYE도 다이얼로그를 종료한다.

> The impact of a non-2xx final response to INVITE on dialogs and sessions makes the use of CANCEL attractive.  The CANCEL attempts to force a non-2xx response to the INVITE (in particular, a 487). Therefore, if a UAC wishes to give up on its call attempt entirely, it can send a CANCEL.  If the INVITE results in 2xx final response(s) to the INVITE, this means that a UAS accepted the invitation while the CANCEL was in progress.  The UAC MAY continue with the sessions established by any 2xx responses, or MAY terminate them with BYE.
다이얼로그와 세션에 대한 INVITE에 대한 non-2xx final 응답이 미치는 영향 때문에 CANCEL을 사용하는 것이 매력적이다. CANCEL은 INVITE에 대해 2xx가 아닌 응답(특히 487)을 강제로 보내려고 시도한다. 따라서 UAC가 호출 시도를 완전히 포기하고자 하는 경우 CANCEL을 보낼 수 있다.  INVITE에 대한 최종 응답이 2xx인 경우, 이는 CANCEL이 진행 중일 때 UAC가 초대를 수락했음을 의미한다.  UAC는 2xx 응답에 의해 설정된 세션을 계속 진행하거나 BYE로 세션을 종료할 수 있다.

> 	The notion of "hanging up" is not well defined within SIP.  It is specific to a particular, albeit common, user interface. Typically, when the user hangs up, it indicates a desire to terminate the attempt to establish a session, and to terminate any sessions already created.  For the caller's UA, this would imply a CANCEL request if the initial INVITE has not generated a final response, and a BYE to all confirmed dialogs after a final response.  For the callee's UA, it would typically imply a BYE; presumably, when the user picked up the phone, a 2xx was generated, and so hanging up would result in a BYE after the ACK is received.  This does not mean a user cannot hang up before receipt of the ACK, it just means that the software in his phone needs to maintain state for a short while in order to clean up properly.  If the particular UI allows for the user to reject a call before its answered, a 403 (Forbidden) is a good way to express that.  As per the rules above, a BYE can't be sent.
	"hanging up"의 개념은 SIP 내에서 잘 정의되어 있지 않다.  이는 일반적이기는 하지만 특정 사용자 인터페이스에 한정되어 있다. 일반적으로 사용자가 전화를 끊는다는 것은 세션 설정 시도를 종료하고 이미 생성된 모든 세션을 종료하려는 의사를 나타낸다.  발신자 UA의 경우, 이는 초기 INVITE에서 최종 응답이 생성되지 않은 경우 CANCEL 요청을 의미하며, 최종 응답 후 확인된 모든 다이얼로그에 대한 BYE를 의미할 수 있다.  수신자의 UA의 경우 일반적으로 BYE를 의미하며, 사용자가 전화를 받았을 때 2xx가 생성되었으므로 ACK가 수신된 후 전화를 끊으면 BYE가 발생한다. 이는 사용자가 ACK를 받기 전에 전화를 끊을 수 없다는 뜻이 아니라, 휴대폰의 소프트웨어가 제대로 정리하기 위해 잠시 동안 상태를 유지해야 한다는 의미일 뿐이다. 특정 UI에서 사용자가 전화를 받기 전에 거부할 수 있도록 허용하는 경우 403(Forbidden)이 이를 표현하는 좋은 방법이다. 위의 규칙에 따라 BYE는 전송할 수 없다.


15.1 Terminating a Session with a BYE Request

15.1.1 UAC Behavior

> A BYE request is constructed as would any other request within a dialog, as described in Section 12.
BYE 요청은 섹션 12에 설명된 대로 다이얼로그 내의 다른 요청과 마찬가지로 구성된다.

> Once the BYE is constructed, the UAC core creates a new non-INVITE client transaction, and passes it the BYE request.  The UAC MUST consider the session terminated (and therefore stop sending or listening for media) as soon as the BYE request is passed to the client transaction.  If the response for the BYE is a 481 (Call/Transaction Does Not Exist) or a 408 (Request Timeout) or no response at all is received for the BYE (that is, a timeout is returned by the client transaction), the UAC MUST consider the session and the dialog terminated.
BYE가 구성되면 UAC 코어는 새로운 non-INVITE 클라이언트 트랜잭션을 생성하고 BYE 요청을 전달한다.  UAC는 BYE 요청이 클라이언트 트랜잭션에 전달되는 즉시 세션이 종료된 것으로 간주해야 한다(따라서 미디어 전송 또는 수신이 중지됨).  BYE에 대한 응답이 481(Call/Transaction) 또는 408(Request Timeout)이거나 BYE에 대한 응답이 전혀 수신되지 않는 경우(즉, 클라이언트 트랜잭션에서 timeout가 반환되는 경우), UAC는 세션 및 다이얼로그가 종료된 것으로 간주해야 한다.


15.1.2 UAS Behavior

> A UAS first processes the BYE request according to the general UAS processing described in Section 8.2.  A UAS core receiving a BYE request checks if it matches an existing dialog.  If the BYE does not match an existing dialog, the UAS core SHOULD generate a 481 (Call/Transaction Does Not Exist) response and pass that to the server transaction.
UAS는 먼저 섹션 8.2에 설명된 일반적인 UAS 처리에 따라 BYE 요청을 처리한다. BYE 요청을 수신한 UAS 코어는 기존 다이얼로그와 일치하는지 확인한다.  BYE가 기존 다이얼로그와 일치하지 않으면 UAS 코어는 481(Call/Transaction) 응답을 생성하고 이를 서버 트랜잭션에 전달해야 한다.

> 	This rule means that a BYE sent without tags by a UAC will be rejected.  This is a change from RFC 2543, which allowed BYE without tags.
	이 규칙은 UAC가 태그 없이 보낸 BYE가 거부됨을 의미한다. 이는 태그 없이 BYE를 허용했던 RFC 2543에서 변경된 것이다.

> A UAS core receiving a BYE request for an existing dialog MUST follow the procedures of Section 12.2.2 to process the request.  Once done, the UAS SHOULD terminate the session (and therefore stop sending and listening for media).  The only case where it can elect not to are multicast sessions, where participation is possible even if the other participant in the dialog has terminated its involvement in the session.  Whether or not it ends its participation on the session, the UAS core MUST generate a 2xx response to the BYE, and MUST pass that to the server transaction for transmission.
기존 다이얼로그에 대한 BYE 요청을 수신한 UAS 코어는 섹션 12.2.2의 절차에 따라 요청을 처리해야 한다. 완료되면 UAS는 세션을 종료해야 한다(따라서 미디어 전송 및 수신을 중지해야 한다). 종료하지 않을 수 있는 유일한 경우는 멀티캐스트 세션으로, 다이얼로그에 참여한 다른 참가자가 세션 참여를 종료한 경우에도 참여가 가능하다. 세션에 대한 참여를 종료하든 종료하지 않든, UAS 코어는 BYE에 대해 2xx 응답을 생성해야 하며, 전송을 위해 서버 트랜잭션에 이를 전달해야 한다.

> The UAS MUST still respond to any pending requests received for that dialog.  It is RECOMMENDED that a 487 (Request Terminated) response be generated to those pending requests.
UAS는 해당 다이얼로그에 대해 수신된 모든 보류 중인 요청에 응답해야 한다. 이러한 보류 중인 요청에 대해 487(Request Terminated) 응답을 생성하는 것이 좋다.